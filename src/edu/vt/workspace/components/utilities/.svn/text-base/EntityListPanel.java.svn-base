/*
 * EntityListPanel.java
 *
 * Created on Jan 22, 2011, 4:17:16 PM
 */

package edu.vt.workspace.components.utilities;

import edu.vt.workspace.data.AWEntity;
import edu.vt.workspace.data.EntityManager;
import java.awt.Component;
import java.util.Collections;
import java.util.Comparator;
import java.util.Set;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 * This class provides a reusable panel for displaying and selecting entities.
 * The panel allows the user to select an entity type, and a sorting technique.
 * The list itself is made public to allow classes that use this panel to attach their
 * own action listeners to the list to handle double clicks or selections.
 * 
 * @author cpa
 */
public class EntityListPanel extends javax.swing.JPanel implements EntityChangeListener{
    private static EntityFreqComparator FREQUENCY_COMPARATOR = new EntityFreqComparator();
    private SortType _sortType = SortType.ALPHABETICALLY;
    private Vector<SortableListEntity> _data;
    private String _currentType;

    /** Creates new form EntityListPanel */
    public EntityListPanel() {
        initComponents();
        EntityManager.getInstance().addEntityChangeListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        entityTypeComboBox = new javax.swing.JComboBox();
        abcButton = new javax.swing.JToggleButton();
        freqButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        entityList = new javax.swing.JList();

        setMinimumSize(new java.awt.Dimension(225, 150));

        jPanel2.setLayout(new java.awt.BorderLayout(0, 15));

        entityTypeComboBox.setBackground(new java.awt.Color(255, 255, 255));
        entityTypeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                entityTypeComboBoxentityTypeChanged(evt);
            }
        });
        loadTypes();
        jPanel2.add(entityTypeComboBox, java.awt.BorderLayout.PAGE_START);

        buttonGroup1.add(abcButton);
        abcButton.setSelected(true);
        abcButton.setText("ABC");
        abcButton.setToolTipText("Sort entities alphabetically");
        abcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abcButtonsortAlphabetically(evt);
            }
        });
        jPanel2.add(abcButton, java.awt.BorderLayout.LINE_START);

        buttonGroup1.add(freqButton);
        freqButton.setText("Frequency");
        freqButton.setToolTipText("Sort entities based on frequency");
        freqButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freqButtonsortByFrequency(evt);
            }
        });
        jPanel2.add(freqButton, java.awt.BorderLayout.LINE_END);

        entityList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        setupEntityList();
        jScrollPane1.setViewportView(entityList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void entityTypeComboBoxentityTypeChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_entityTypeComboBoxentityTypeChanged

        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            setCurrentType((String)entityTypeComboBox.getSelectedItem());
        }
}//GEN-LAST:event_entityTypeComboBoxentityTypeChanged

    private void abcButtonsortAlphabetically(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abcButtonsortAlphabetically
        _sortType = SortType.ALPHABETICALLY;
        sortEntities();
}//GEN-LAST:event_abcButtonsortAlphabetically

    private void freqButtonsortByFrequency(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freqButtonsortByFrequency
        _sortType = SortType.FREQUENCY;
        sortEntities();
}//GEN-LAST:event_freqButtonsortByFrequency

    public void setSortBy(String mode){

        if (_sortType == SortType.ALPHABETICALLY) {
            abcButton.doClick();

        } else {
            freqButton.doClick();
        }

    }

    public String getSortBy(){
       return _sortType.toString();
    }

    public void setCurrentType(String type){

        if (!type.equalsIgnoreCase((String)entityTypeComboBox.getSelectedItem())){
            // find the right type and set the combo box to it
            entityTypeComboBox.setSelectedItem(type);
            type = (String)entityTypeComboBox.getSelectedItem();

        }

        _currentType = type;
        loadList();
    }

    public String getCurrentType(){
        return _currentType;
    }

    public AWEntity getSelectedEntity(){
        return ((SortableListEntity)entityList.getSelectedValue()).getEntity();
    }

    /**
     * This method is responsible for setting up the entity list by adding the
     * selection listener and the cell renderer.
     */
    private void setupEntityList() {
        entityList.setCellRenderer(new EntityListRenderer());
    }

    /**
     * This method is called after the type menu to populate it
     */
    private void loadTypes() {
        Set<String> types = EntityManager.getInstance().getEntityTypes();

        for (String type : types) {
            entityTypeComboBox.addItem(type);
        }
        entityTypeComboBox.setRenderer(new EntityTypeRenderer());

        if (types.size() > 0)
            entityTypeComboBox.setSelectedIndex(0);

    }

    private void loadList(){
        Vector<AWEntity> entities = EntityManager.getInstance().getEntities(_currentType);
        _data = new Vector<SortableListEntity>(entities.size());
        for (AWEntity entity : entities) {
            _data.add(new SortableListEntity(entity));
        }
        sortEntities();
    }


    /**
     * This method sorts the list.
     */
    private void sortEntities() {

        if (_sortType == SortType.ALPHABETICALLY) {
            Collections.sort(_data);

        } else {
            Collections.sort(_data, FREQUENCY_COMPARATOR);
        }
        entityList.setListData(_data);
    }


    public void addEntity(EntityChangeEvent ece) {
        loadList();
    }

    public void removeEntity(EntityChangeEvent ece) {
        loadList();
    }

    public void entityChanged(EntityChangeEvent ece) {
        entityTypeComboBox.removeAllItems();
        loadTypes();
        loadList();
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton abcButton;
    private javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JList entityList;
    private javax.swing.JComboBox entityTypeComboBox;
    private javax.swing.JToggleButton freqButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables




       // Helper classes for the entityList
    private enum SortType {

        ALPHABETICALLY, FREQUENCY
    };

    


   

    private class EntityListRenderer extends JLabel implements ListCellRenderer {

        public Component getListCellRendererComponent(JList list,
                Object value,
                int index,
                boolean isSelected,
                boolean cellHasFocus) {
            AWEntity entity = ((SortableListEntity)value).getEntity();
            setText(entity.getValue() + "  [" + entity.numDocs() + "]");

            if (isSelected) {
                setBackground(list.getSelectionBackground());
                setForeground(list.getSelectionForeground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }
            setEnabled(list.isEnabled());
            setFont(list.getFont());
            setOpaque(true);
            return this;
        }
    }

}
